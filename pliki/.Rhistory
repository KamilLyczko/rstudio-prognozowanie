labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
rm(confirmed1.train, confirmed1.test, c1_naive_forecast, c1_snaive_forecast, c1_drift_forecast)
#zbiór uczący i testowy dla szeregu czasowego liczby zakażeń dla I fali
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecast <- naive(confirmed1.train, h = 30)
c1_snaive_forecast <- snaive(confirmed1.train, h = 30)
c1_drift_forecast <- rwf(confirmed1.train, h = 30, drift = TRUE)
autoplot(confirmed1.train) +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
autoplot(confirmed1) +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
rm(confirmed1.train, confirmed1.test, c1_naive_forecast, c1_snaive_forecast, c1_drift_forecast)
#zbiór uczący i testowy dla szeregu czasowego liczby zakażeń dla I fali
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecast <- naive(confirmed1.train, h = 30)
c1_snaive_forecast <- snaive(confirmed1.train, h = 30)
c1_drift_forecast <- rwf(confirmed1.train, h = 30, drift = TRUE)
autoplot(confirmed1.train) +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
autoplot(confirmed1.test) +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
rm(confirmed1.train, confirmed1.test, c1_naive_forecast, c1_snaive_forecast, c1_drift_forecast)
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecast <- naive(confirmed1.train, h = 30)
c1_snaive_forecast <- snaive(confirmed1.train, h = 30)
c1_drift_forecast <- rwf(confirmed1.train, h = 30, drift = TRUE)
is.ts(c1_naive_forecast$mean)
c1_naive_forecast$mean
date_window <- window(data$date, start = (length(confirmed1.train) + 1), end = (length(confirmed1.train) + 30))
x_labs <- c(seq(date_window[1], date_window[30], 5))
x_labs
date_window
ggplot(data = data.frame(x = data_window, y = confirmed1.test), aes(x, y)) +
geom_line() +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
ggplot(data = data.frame(x = date_window, y = confirmed1.test), aes(x, y)) +
geom_line() +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
ggplot(data = data.frame(x = date_window, y = confirmed1.test), aes(x, y)) +
geom_line() +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
ggplot(data = data.frame(x = date_window, y = confirmed1.test), aes(x, y)) +
geom_line() +
autolayer(c1_naive_forecast$mean, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast$mean, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast$mean, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
ggplot(data = data.frame(x = date_window, y = confirmed1.test, a = c1_naive_forecast$mean,
b = c1_snaive_forecast$mean,
c = c1_drift_forecast$mean), aes(x, y, a, b, c)) +
geom_line() +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
#zbiór uczący i testowy dla szeregu czasowego liczby zakażeń dla I fali
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecast <- naive(confirmed1.train, h = 30)
c1_snaive_forecast <- snaive(confirmed1.train, h = 30)
c1_drift_forecast <- rwf(confirmed1.train, h = 30, drift = TRUE)
autoplot(confirmed1.train) +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
autoplot(confirmed1.test) +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
rm(confirmed1.train, confirmed1.test, c1_naive_forecast, c1_snaive_forecast, c1_drift_forecast, date_window, x_labs)
naive_forecasts <- function(ts, h) {
naive_forecast <- naive(ts, h = h)
snaive_forecast <- snaive(ts, h = h)
drift_forecast <- rwf(ts, h = h, drift = TRUE)
forecasts <- data.frame(naive = naive_forecast, snaive = snaive_forecast, drift = drift_forecast)
return(forecasts)
}
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_forecasts <- naive_forecasts(confirmed1.train, 30)
View(c1_forecasts)
autoplot(confirmed1.train) +
autolayer(c1_forecasts$naive, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_forecasts$snaive, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_forecasts$drift, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
#zbiór uczący i testowy dla szeregu czasowego liczby zakażeń dla I fali
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecast <- naive(confirmed1.train, h = 30)
c1_snaive_forecast <- snaive(confirmed1.train, h = 30)
c1_drift_forecast <- rwf(confirmed1.train, h = 30, drift = TRUE)
autoplot(confirmed1.train) +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
autoplot(confirmed1.test) +
autolayer(c1_naive_forecast, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_snaive_forecast, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_drift_forecast, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Porównanie prognoz z szeregiem testowym", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
rm(confirmed1.train, confirmed1.test, c1_naive_forecast, c1_snaive_forecast, c1_drift_forecast)
naive_forecasts <- function(ts, h) {
naive_forecast <- naive(ts, h = h)
snaive_forecast <- snaive(ts, h = h)
drift_forecast <- rwf(ts, h = h, drift = TRUE)
forecasts <- list(naive = naive_forecast, snaive = snaive_forecast, drift = drift_forecast)
return(forecasts)
}
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_forecasts <- naive_forecasts(confirmed1.train, 30)
autoplot(confirmed1.train) +
autolayer(c1_forecasts$naive, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_forecasts$snaive, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_forecasts$drift, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Prognozy metody naiwnej liczby zakażeń dla I fali", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
autoplot(confirmed1.test) +
autolayer(c1_forecasts$naive, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_forecasts$naive, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_forecasts$naive, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Porównanie prognoz z szeregiem testowym", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
autoplot(confirmed1.test) +
autolayer(c1_forecasts$naive, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(c1_forecasts$snaive, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(c1_forecasts$drift, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Porównanie prognoz z szeregiem testowym", x = "numer tygodnia", y = "liczba zakażeń",
color = "Prognozy:")
generate_naive_forecasts_plot <- function(ts, forecasts, title = "", ylab = "") {
autoplot(ts) +
autolayer(forecasts$naive, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(forecasts$snaive, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(forecasts$drift, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = title, x = "numer tygodnia", y = ylab, color = "Prognozy:")
}
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecasts <- naive_forecasts(confirmed1.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla I fali"
generate_naive_forecasts_plot(confirmed1.train, c1_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
#funkcja generująca wykres czasowy z szeregiem testowym i prognozami metod naiwnych
generate_naive_test_comparison_plot <- function(ts, forecasts, ylab = "") {
autoplot(ts) +
autolayer(forecasts$naive, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(forecasts$snaive, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(forecasts$drift, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Porównanie prognoz z szeregiem testowym", x = "numer tygodnia", y = ylab,
color = "Prognozy:")
}
generate_naive_test_comparison_plot(confirmed1.test, c1_naive_forecasts, ylab = "liczba zakażeń")
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecasts <- naive_forecasts(confirmed1.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla I fali"
generate_naive_forecasts_plot(confirmed1.train, c1_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed1.test, c1_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed1.train, confirmed1.test, c1_naive_forecasts, plot_title)
confirmed2.train <- window(confirmed2, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed2.test <- window(confirmed2, start = weekly_freq_day_number(length(confirmed1) - 29))
c2_naive_forecasts <- naive_forecasts(confirmed2.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla II fali"
generate_naive_forecasts_plot(confirmed2.train, c2_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed2.test, c2_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed2.train, confirmed2.test, c2_naive_forecasts, plot_title)
confirmed2.train <- window(confirmed2, end = weekly_freq_day_number(length(confirmed2) - 30))
confirmed2.test <- window(confirmed2, start = weekly_freq_day_number(length(confirmed2) - 29))
c2_naive_forecasts <- naive_forecasts(confirmed2.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla II fali"
generate_naive_forecasts_plot(confirmed2.train, c2_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed2.test, c2_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed2.train, confirmed2.test, c2_naive_forecasts, plot_title)
confirmed3.train <- window(confirmed3, end = weekly_freq_day_number(length(confirmed3) - 30))
confirmed3.test <- window(confirmed3, start = weekly_freq_day_number(length(confirmed3) - 29))
c3_naive_forecasts <- naive_forecasts(confirmed3.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla II fali"
generate_naive_forecasts_plot(confirmed3.train, c3_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed3.test, c3_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed3.train, confirmed3.test, c3_naive_forecasts, plot_title)
confirmed4.train <- window(confirmed4, end = weekly_freq_day_number(length(confirmed4) - 30))
confirmed4.test <- window(confirmed4, start = weekly_freq_day_number(length(confirmed4) - 29))
c4_naive_forecasts <- naive_forecasts(confirmed4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla IV fali"
generate_naive_forecasts_plot(confirmed3.train, c4_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed3.test, c4_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed4.train, confirmed4.test, c4_naive_forecasts, plot_title)
confirmed4.train <- window(confirmed4, end = weekly_freq_day_number(length(confirmed4) - 30))
confirmed4.test <- window(confirmed4, start = weekly_freq_day_number(length(confirmed4) - 29))
c4_naive_forecasts <- naive_forecasts(confirmed4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla IV fali"
generate_naive_forecasts_plot(confirmed4.train, c4_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed3.test, c4_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed4.train, confirmed4.test, c4_naive_forecasts, plot_title)
c4_naive_forecasts <- naive_forecasts(confirmed4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla IV fali"
generate_naive_forecasts_plot(confirmed4.train, c4_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed4.test, c4_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed4.train, confirmed4.test, c4_naive_forecasts, plot_title)
confirmed4.train <- window(confirmed4, end = weekly_freq_day_number(length(confirmed4) - 30))
confirmed4.test <- window(confirmed4, start = weekly_freq_day_number(length(confirmed4) - 29))
c4_naive_forecasts <- naive_forecasts(confirmed4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla IV fali"
generate_naive_forecasts_plot(confirmed4.train, c4_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed4.test, c4_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed4.train, confirmed4.test, c4_naive_forecasts, plot_title)
confirmed4.train <- window(confirmed4, end = weekly_freq_day_number(length(confirmed4) - 30))
confirmed4.test <- window(confirmed4, start = weekly_freq_day_number(length(confirmed4) - 29))
c4_naive_forecasts <- naive_forecasts(confirmed4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla IV fali"
generate_naive_forecasts_plot(window(confirmed4.train, start = weekly_freq_day_number(500)),
c4_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed4.test, c4_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed4.train, confirmed4.test, c4_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla I fali
deaths1.train <- window(deaths1, end = weekly_freq_day_number(length(deaths1) - 30))
deaths1.test <- window(deaths1, start = weekly_freq_day_number(length(deaths1) - 29))
d1_naive_forecasts <- naive_forecasts(deaths1.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla I fali"
generate_naive_forecasts_plot(deaths1.train, d1_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths1.test, d1_naive_forecasts, ylab = "liczba śmierci")
rm(deaths1.train, deaths1.test, d1_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla II fali
deaths2.train <- window(deaths2, end = weekly_freq_day_number(length(deaths2) - 30))
deaths2.test <- window(deaths2, start = weekly_freq_day_number(length(deaths2) - 29))
d2_naive_forecasts <- naive_forecasts(deaths2.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla II fali"
generate_naive_forecasts_plot(deaths2.train, d2_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths2.test, d2_naive_forecasts, ylab = "liczba śmierci")
rm(deaths2.train, deaths2.test, d2_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla III fali
deaths3.train <- window(deaths3, end = weekly_freq_day_number(length(deaths3) - 30))
deaths3.test <- window(deaths3, start = weekly_freq_day_number(length(deaths3) - 29))
d3_naive_forecasts <- naive_forecasts(deaths3.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla III fali"
generate_naive_forecasts_plot(deaths3.train, d3_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths3.test, d3_naive_forecasts, ylab = "liczba śmierci")
rm(deaths3.train, deaths3.test, d3_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla IV fali
deaths4.train <- window(deaths4, end = weekly_freq_day_number(length(deaths4) - 30))
deaths4.test <- window(deaths4, start = weekly_freq_day_number(length(deaths4) - 29))
d4_naive_forecasts <- naive_forecasts(deaths4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla IV fali"
generate_naive_forecasts_plot(deaths4.train, d4_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths4.test, d4_naive_forecasts, ylab = "liczba śmierci")
rm(deaths4.train, deaths4.test, d4_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla I fali
deaths1.train <- window(deaths1, end = weekly_freq_day_number(length(deaths1) - 30))
deaths1.test <- window(deaths1, start = weekly_freq_day_number(length(deaths1) - 29))
d1_naive_forecasts <- naive_forecasts(deaths1.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla I fali"
generate_naive_forecasts_plot(deaths1.train, d1_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths1.test, d1_naive_forecasts, ylab = "liczba śmierci")
rm(deaths1.train, deaths1.test, d1_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla II fali
deaths2.train <- window(deaths2, end = weekly_freq_day_number(length(deaths2) - 30))
deaths2.test <- window(deaths2, start = weekly_freq_day_number(length(deaths2) - 29))
d2_naive_forecasts <- naive_forecasts(deaths2.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla II fali"
generate_naive_forecasts_plot(deaths2.train, d2_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths2.test, d2_naive_forecasts, ylab = "liczba śmierci")
rm(deaths2.train, deaths2.test, d2_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla III fali
deaths3.train <- window(deaths3, end = weekly_freq_day_number(length(deaths3) - 30))
deaths3.test <- window(deaths3, start = weekly_freq_day_number(length(deaths3) - 29))
d3_naive_forecasts <- naive_forecasts(deaths3.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla III fali"
generate_naive_forecasts_plot(deaths3.train, d3_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths3.test, d3_naive_forecasts, ylab = "liczba śmierci")
rm(deaths3.train, deaths3.test, d3_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla IV fali
deaths4.train <- window(deaths4, end = weekly_freq_day_number(length(deaths4) - 30))
deaths4.test <- window(deaths4, start = weekly_freq_day_number(length(deaths4) - 29))
d4_naive_forecasts <- naive_forecasts(deaths4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla IV fali"
generate_naive_forecasts_plot(window(deaths4.train, start = weekly_freq_day_number(500)),
d4_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths4.test, d4_naive_forecasts, ylab = "liczba śmierci")
rm(deaths4.train, deaths4.test, d4_naive_forecasts, plot_title)
rm(c1_forecasts)
#Prognozy metod naiwnych liczby zakażeń dla I fali
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecasts <- naive_forecasts(confirmed1.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla I fali"
generate_naive_forecasts_plot(confirmed1.train, c1_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed1.test, c1_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed1.train, confirmed1.test, c1_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby zakażeń dla II fali
confirmed2.train <- window(confirmed2, end = weekly_freq_day_number(length(confirmed2) - 30))
confirmed2.test <- window(confirmed2, start = weekly_freq_day_number(length(confirmed2) - 29))
c2_naive_forecasts <- naive_forecasts(confirmed2.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla II fali"
generate_naive_forecasts_plot(confirmed2.train, c2_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed2.test, c2_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed2.train, confirmed2.test, c2_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby zakażeń dla III fali
confirmed3.train <- window(confirmed3, end = weekly_freq_day_number(length(confirmed3) - 30))
confirmed3.test <- window(confirmed3, start = weekly_freq_day_number(length(confirmed3) - 29))
c3_naive_forecasts <- naive_forecasts(confirmed3.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla III fali"
generate_naive_forecasts_plot(confirmed3.train, c3_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed3.test, c3_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed3.train, confirmed3.test, c3_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby zakażeń dla IV fali
confirmed4.train <- window(confirmed4, end = weekly_freq_day_number(length(confirmed4) - 30))
confirmed4.test <- window(confirmed4, start = weekly_freq_day_number(length(confirmed4) - 29))
c4_naive_forecasts <- naive_forecasts(confirmed4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby zakażeń dla IV fali"
generate_naive_forecasts_plot(window(confirmed4.train, start = weekly_freq_day_number(500)),
c4_naive_forecasts, title = plot_title, ylab = "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed4.test, c4_naive_forecasts, ylab = "liczba zakażeń")
rm(confirmed4.train, confirmed4.test, c4_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla I fali
deaths1.train <- window(deaths1, end = weekly_freq_day_number(length(deaths1) - 30))
deaths1.test <- window(deaths1, start = weekly_freq_day_number(length(deaths1) - 29))
d1_naive_forecasts <- naive_forecasts(deaths1.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla I fali"
generate_naive_forecasts_plot(deaths1.train, d1_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths1.test, d1_naive_forecasts, ylab = "liczba śmierci")
rm(deaths1.train, deaths1.test, d1_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla II fali
deaths2.train <- window(deaths2, end = weekly_freq_day_number(length(deaths2) - 30))
deaths2.test <- window(deaths2, start = weekly_freq_day_number(length(deaths2) - 29))
d2_naive_forecasts <- naive_forecasts(deaths2.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla II fali"
generate_naive_forecasts_plot(deaths2.train, d2_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths2.test, d2_naive_forecasts, ylab = "liczba śmierci")
rm(deaths2.train, deaths2.test, d2_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla III fali
deaths3.train <- window(deaths3, end = weekly_freq_day_number(length(deaths3) - 30))
deaths3.test <- window(deaths3, start = weekly_freq_day_number(length(deaths3) - 29))
d3_naive_forecasts <- naive_forecasts(deaths3.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla III fali"
generate_naive_forecasts_plot(deaths3.train, d3_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths3.test, d3_naive_forecasts, ylab = "liczba śmierci")
rm(deaths3.train, deaths3.test, d3_naive_forecasts, plot_title)
#Prognozy metod naiwnych liczby śmierci dla IV fali
deaths4.train <- window(deaths4, end = weekly_freq_day_number(length(deaths4) - 30))
deaths4.test <- window(deaths4, start = weekly_freq_day_number(length(deaths4) - 29))
d4_naive_forecasts <- naive_forecasts(deaths4.train, 30)
plot_title <- "Prognozy metody naiwnej liczby śmierci dla IV fali"
generate_naive_forecasts_plot(window(deaths4.train, start = weekly_freq_day_number(500)),
d4_naive_forecasts, title = plot_title, ylab = "liczba śmierci")
generate_naive_test_comparison_plot(deaths4.test, d4_naive_forecasts, ylab = "liczba śmierci")
rm(deaths4.train, deaths4.test, d4_naive_forecasts, plot_title)
#funkcja generująca wykres czasowy z szeregiem testowym i prognozami metod naiwnych
generate_naive_test_comparison_plot <- function(ts, forecasts, title = "", ylab = "") {
autoplot(ts) +
autolayer(forecasts$naive, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(forecasts$snaive, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(forecasts$drift, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = "Porównanie prognoz z szeregiem testowym", x = "numer tygodnia", y = ylab,
color = "Prognozy:")
}
#Prognozy metod naiwnych liczby śmierci dla I fali
deaths1.train <- window(deaths1, end = weekly_freq_day_number(length(deaths1) - 30))
deaths1.test <- window(deaths1, start = weekly_freq_day_number(length(deaths1) - 29))
d1_naive_forecasts <- naive_forecasts(deaths1.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby śmierci dla I fali"
plot_title2 <- "Porównanie prognoz liczby śmierci z szeregiem testowym dla I fali"
generate_naive_forecasts_plot(deaths1.train, d1_naive_forecasts, plot_title1, "liczba śmierci")
generate_naive_test_comparison_plot(deaths1.test, d1_naive_forecasts, plot_title2, "liczba śmierci")
rm(deaths1.train, deaths1.test, d1_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby śmierci dla II fali
deaths2.train <- window(deaths2, end = weekly_freq_day_number(length(deaths2) - 30))
deaths2.test <- window(deaths2, start = weekly_freq_day_number(length(deaths2) - 29))
d2_naive_forecasts <- naive_forecasts(deaths2.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby śmierci dla II fali"
plot_title2 <- "Porównanie prognoz liczby śmierci z szeregiem testowym dla II fali"
generate_naive_forecasts_plot(deaths2.train, d2_naive_forecasts, plot_title1, "liczba śmierci")
generate_naive_test_comparison_plot(deaths2.test, d2_naive_forecasts, plot_title2, "liczba śmierci")
rm(deaths2.train, deaths2.test, d2_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby śmierci dla III fali
deaths3.train <- window(deaths3, end = weekly_freq_day_number(length(deaths3) - 30))
deaths3.test <- window(deaths3, start = weekly_freq_day_number(length(deaths3) - 29))
d3_naive_forecasts <- naive_forecasts(deaths3.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby śmierci dla III fali"
plot_title2 <- "Porównanie prognoz liczby śmierci z szeregiem testowym dla III fali"
generate_naive_forecasts_plot(deaths3.train, d3_naive_forecasts, plot_title1, "liczba śmierci")
generate_naive_test_comparison_plot(deaths3.test, d3_naive_forecasts, plot_title2, "liczba śmierci")
rm(deaths3.train, deaths3.test, d3_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby śmierci dla IV fali
deaths4.train <- window(deaths4, end = weekly_freq_day_number(length(deaths4) - 30))
deaths4.test <- window(deaths4, start = weekly_freq_day_number(length(deaths4) - 29))
d4_naive_forecasts <- naive_forecasts(deaths4.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby śmierci dla IV fali"
plot_title2 <- "Porównanie prognoz liczby śmierci z szeregiem testowym dla IV fali"
generate_naive_forecasts_plot(window(deaths4.train, start = weekly_freq_day_number(500)),
d4_naive_forecasts, plot_title1, "liczba śmierci")
generate_naive_test_comparison_plot(deaths4.test, d4_naive_forecasts, plot_title2, "liczba śmierci")
rm(deaths4.train, deaths4.test, d4_naive_forecasts, plot_title1, plot_title2)
#funkcja generująca wykres czasowy z szeregiem testowym i prognozami metod naiwnych
generate_naive_test_comparison_plot <- function(ts, forecasts, title = "", ylab = "") {
autoplot(ts) +
autolayer(forecasts$naive, series = "Prosta metoda naiwna", PI = FALSE) +
autolayer(forecasts$snaive, series = "Sezonowa metoda naiwna", PI = FALSE) +
autolayer(forecasts$drift, series = "Przyrostowa metoda naiwna", PI = FALSE) +
labs(title = title, x = "numer tygodnia", y = ylab, color = "Prognozy:")
}
#Prognozy metod naiwnych liczby śmierci dla I fali
deaths1.train <- window(deaths1, end = weekly_freq_day_number(length(deaths1) - 30))
deaths1.test <- window(deaths1, start = weekly_freq_day_number(length(deaths1) - 29))
d1_naive_forecasts <- naive_forecasts(deaths1.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby śmierci dla I fali"
plot_title2 <- "Porównanie prognoz liczby śmierci z szeregiem testowym dla I fali"
generate_naive_forecasts_plot(deaths1.train, d1_naive_forecasts, plot_title1, "liczba śmierci")
generate_naive_test_comparison_plot(deaths1.test, d1_naive_forecasts, plot_title2, "liczba śmierci")
rm(deaths1.train, deaths1.test, d1_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby śmierci dla II fali
deaths2.train <- window(deaths2, end = weekly_freq_day_number(length(deaths2) - 30))
deaths2.test <- window(deaths2, start = weekly_freq_day_number(length(deaths2) - 29))
d2_naive_forecasts <- naive_forecasts(deaths2.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby śmierci dla II fali"
plot_title2 <- "Porównanie prognoz liczby śmierci z szeregiem testowym dla II fali"
generate_naive_forecasts_plot(deaths2.train, d2_naive_forecasts, plot_title1, "liczba śmierci")
generate_naive_test_comparison_plot(deaths2.test, d2_naive_forecasts, plot_title2, "liczba śmierci")
rm(deaths2.train, deaths2.test, d2_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby śmierci dla III fali
deaths3.train <- window(deaths3, end = weekly_freq_day_number(length(deaths3) - 30))
deaths3.test <- window(deaths3, start = weekly_freq_day_number(length(deaths3) - 29))
d3_naive_forecasts <- naive_forecasts(deaths3.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby śmierci dla III fali"
plot_title2 <- "Porównanie prognoz liczby śmierci z szeregiem testowym dla III fali"
generate_naive_forecasts_plot(deaths3.train, d3_naive_forecasts, plot_title1, "liczba śmierci")
generate_naive_test_comparison_plot(deaths3.test, d3_naive_forecasts, plot_title2, "liczba śmierci")
rm(deaths3.train, deaths3.test, d3_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby śmierci dla IV fali
deaths4.train <- window(deaths4, end = weekly_freq_day_number(length(deaths4) - 30))
deaths4.test <- window(deaths4, start = weekly_freq_day_number(length(deaths4) - 29))
d4_naive_forecasts <- naive_forecasts(deaths4.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby śmierci dla IV fali"
plot_title2 <- "Porównanie prognoz liczby śmierci z szeregiem testowym dla IV fali"
generate_naive_forecasts_plot(window(deaths4.train, start = weekly_freq_day_number(500)),
d4_naive_forecasts, plot_title1, "liczba śmierci")
generate_naive_test_comparison_plot(deaths4.test, d4_naive_forecasts, plot_title2, "liczba śmierci")
rm(deaths4.train, deaths4.test, d4_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby zakażeń dla I fali
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecasts <- naive_forecasts(confirmed1.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby zakażeń dla I fali"
plot_title2 <- "Porównanie prognoz liczby zakażeń z szeregiem testowym dla I fali"
generate_naive_forecasts_plot(confirmed1.train, c1_naive_forecasts, plot_title1, "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed1.test, c1_naive_forecasts, plot_title2, "liczba zakażeń")
rm(confirmed1.train, confirmed1.test, c1_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby zakażeń dla II fali
confirmed2.train <- window(confirmed2, end = weekly_freq_day_number(length(confirmed2) - 30))
confirmed2.test <- window(confirmed2, start = weekly_freq_day_number(length(confirmed2) - 29))
c2_naive_forecasts <- naive_forecasts(confirmed2.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby zakażeń dla II fali"
plot_title2 <- "Porównanie prognoz liczby zakażeń z szeregiem testowym dla II fali"
generate_naive_forecasts_plot(confirmed2.train, c2_naive_forecasts, plot_title1, "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed2.test, c2_naive_forecasts, plot_title2, "liczba zakażeń")
rm(confirmed2.train, confirmed2.test, c2_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby zakażeń dla III fali
confirmed3.train <- window(confirmed3, end = weekly_freq_day_number(length(confirmed3) - 30))
confirmed3.test <- window(confirmed3, start = weekly_freq_day_number(length(confirmed3) - 29))
c3_naive_forecasts <- naive_forecasts(confirmed3.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby zakażeń dla III fali"
plot_title2 <- "Porównanie prognoz liczby zakażeń z szeregiem testowym dla III fali"
generate_naive_forecasts_plot(confirmed3.train, c3_naive_forecasts, plot_title1, "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed3.test, c3_naive_forecasts, plot_title2, "liczba zakażeń")
rm(confirmed3.train, confirmed3.test, c3_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby zakażeń dla IV fali
confirmed4.train <- window(confirmed4, end = weekly_freq_day_number(length(confirmed4) - 30))
confirmed4.test <- window(confirmed4, start = weekly_freq_day_number(length(confirmed4) - 29))
c4_naive_forecasts <- naive_forecasts(confirmed4.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby zakażeń dla IV fali"
plot_title2 <- "Porównanie prognoz liczby zakażeń z szeregiem testowym dla IV fali"
generate_naive_forecasts_plot(window(confirmed4.train, start = weekly_freq_day_number(500)),
c4_naive_forecasts, plot_title1, "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed4.test, c4_naive_forecasts, plot_title2, "liczba zakażeń")
rm(confirmed4.train, confirmed4.test, c4_naive_forecasts, plot_title1, plot_title2)
View(get_date_of_obs_v)
?accuracy
