date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break;
day_in_year <- day_in_year + month_days[i];
}
return day_in_year
}
day_of_year_number <- function(date) {
date <- as.Date(date);
month_number <- as.numeric(format(date, "%m"));
day_number <- as.numeric(format(date, "%d"));
year_number <- as.numeric(format(date, "%y"));
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
day_in_year <- day_number;
for (i in 1:month_number) {
if(i==month_number)
break;
day_in_year <- day_in_year + month_days[i];
}
return day_in_year;
}
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
}
day_of_year_number("2016-01-02")
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
return(day_in_year)
}
day_of_year_number("2016-01-02")
day_of_year_number("2014-06-01")
day_of_year_number("2014-12-12")
day_of_year_number("2014-12-31")
day_of_year_number("2014-01-01")
!5
!0
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30);
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
if (!year_number %% 4 && month_number > 2)
day_in_year <- day_in_year + 1
return(day_in_year)
}
day_of_year_number("2013-03-01")
day_of_year_number("2012-03-01")
day_of_year_number("2012-0")
rm(inds)
rm(fc)
rm(month_days)
View(day_of_year_number)
View(data)
rm(data)
View(day_of_year_number)
save.image("D:/Studia/Praca dyplomowa/pliki/day_of_year_number_function.RData")
setwd("D:/Studia/Praca dyplomowa/R/rstudio-prognozowanie/pliki")
load("D:/Studia/Praca dyplomowa/R/rstudio-prognozowanie/pliki/.RData")
library(forecast)
library(ggplot2)
library(expsmooth)
library(GGally)
library(pdp)
library(stats)
library(ggtext)
decom_c_a <- decompose(confirmed, type = "additive")
decom_c_m <- decompose(confirmed, type = "multiplicative")
decom_d_a <- decompose(deaths, type = "additive")
decom_d_m <- decompose(deaths, type = "multiplicative")
text_size <- 10
title_c <- "Dekompozycja szeregu czasowego liczby zakażeń"
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, " - model addytywny")) + xlab("numer tygodnia") +
theme(plot.title = element_text(size = text_size))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, " - model multiplikatywny")) + xlab("numer tygodnia") +
theme(plot.title = element_text(size = text_size))
title_d <- "Dekompozycja szeregu czasowego liczby śmierci"
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, " - model addytywny")) + xlab("numer tygodnia") +
theme(plot.title = element_text(size = text_size))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, " - model multiplikatywny")) + xlab("numer tygodnia") +
theme(plot.title = element_text(size = text_size))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, decom_d_a, decom_d_m, title_c, title_d, plots, text_size)
?decompose
autoplot(log(confirmed))
autoplot(stl(log(confirmed)))
?stl
autoplot(stl(log10(confirmed)))
autoplot(log10(confirmed))
decom_c_a <- decompose(confirmed, type = "additive")
decom_c_m <- decompose(confirmed, type = "multiplicative")
decom_d_a <- decompose(deaths, type = "additive")
decom_d_m <- decompose(deaths, type = "multiplicative")
text_size <- 10
title_c <- "Dekompozycja szeregu czasowego liczby zakażeń"
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, " - model addytywny")) + xlab("numer tygodnia") +
theme(plot.title = element_text(size = text_size))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, " - model multiplikatywny")) + xlab("numer tygodnia") +
theme(plot.title = element_text(size = text_size))
title_d <- "Dekompozycja szeregu czasowego liczby śmierci"
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, " - model addytywny")) + xlab("numer tygodnia") +
theme(plot.title = element_text(size = text_size))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, " - model multiplikatywny")) + xlab("numer tygodnia") +
theme(plot.title = element_text(size = text_size))
plots_c <- list(c_plot_a, c_plot_m)
plots_d <- list(d_plot_a, d_plot_m)
grid.arrange(grobs = plots_c)
grid.arrange(grobs = plots_d)
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, decom_d_a, decom_d_m, title_c, title_d, plots_c, plots_d, text_size)
?stl
?decompose
?stl
?log
x <- log(confirmed)
plot.ts(confirmed)
plot.ts(x)
rm(x)
x <- log(confirmed)
plot.ts(confirmed)
plot.ts(x)
y<- exp(x)
plot.ts(y)
rm(x, y)
log_confirmed <- log(confirmed)
log_deaths <- log(deaths)
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
autoplot(decom_c)
autoplot(decom_d)
rm(log_confirmed, log_deaths, decom_c, decom_d)
log_confirmed <- log(confirmed)
log_deaths <- log(deaths)
#decom_c <- stl(log_confirmed, s.window = 7)
#decom_d <- stl(log_deaths, s.window = 7)
#autoplot(decom_c)
#autoplot(decom_d)
autoplot(log_confirmed)
autoplot(log_deaths)
rm(log_confirmed, log_deaths, decom_c, decom_d)
log_confirmed <- log(confirmed)
log_deaths <- log(deaths)
#decom_c <- stl(log_confirmed, s.window = 7)
#decom_d <- stl(log_deaths, s.window = 7)
#autoplot(decom_c)
#autoplot(decom_d)
autoplot(log_confirmed)
autoplot(log_deaths)
is.ts(log_confirmed)
stl(log_confirmed, s.window = 7)
#decom_c <- stl(log_confirmed, s.window = 7)
#decom_d <- stl(log_deaths, s.window = 7)
#autoplot(decom_c)
#autoplot(decom_d)
stl(log_confirmed, s.window = 9)
stl(log_confirmed, s.window = "periodic")
#decom_c <- stl(log_confirmed, s.window = 7)
#decom_d <- stl(log_deaths, s.window = 7)
#autoplot(decom_c)
#autoplot(decom_d)
stl(log(confirmed), s.window = "periodic")
#decom_c <- stl(log_confirmed, s.window = 7)
#decom_d <- stl(log_deaths, s.window = 7)
#autoplot(decom_c)
#autoplot(decom_d)
stl(log(confirmed))
log_confirmed
log_confirmed[1]
log_deaths
is.infinite(log_confirmed[1])
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
log_deaths
log_confirmed <- log10(confirmed)
log_confirmed
autoplot(confirmed) + autolayer(exp(log_confirmed))
log_confirmed <- log(confirmed)
autoplot(confirmed) + autolayer(exp(log_confirmed))
log_confirmed[is.infinite(log_confirmed)] <- 0
autoplot(confirmed) + autolayer(exp(log_confirmed))
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
autoplot(deaths) + autolayer(exp(log_deaths))
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
autoplot(decom_c)
autoplot(decom_d)
rm(log_confirmed, log_deaths, decom_c, decom_d)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
autoplot(decom_c)
autoplot(decom_d)
autoplot(exp(decom_c))
rm(log_confirmed, log_deaths, decom_c, decom_d)
?stl
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
autoplot(decom_c)
autoplot(decom_d)
decom_c$time.series
autoplot(exp(decom_c$time.series))
df <- data.frame(decom_c$time.series)
autoplot(exp(decom_c$time.series))
rm(df)
df <- data.frame(decom_c$time.series)
autoplot(exp(df))
rm(df)
df <- data.frame(decom_c$time.series)
plot(exp(df))
rm(df)
df <- data.frame(decom_c$time.series)
plot.ts(exp(df))
rm(df)
plot.ts(decom_c$time.series)
plot.ts(exp(decom_c$time.series))
autoplot(decom_d)
decom_c$time.series <- exp(decom_c$time.series)
autoplot(decom_c)
decom_c <- stl(log_confirmed, s.window = 7)
autoplot(decom_c)
plot.ts(exp(decom_c$time.series))
decom_c$time.series$remainder
decom_c$time.series
decom_c$time.series["seasonal"]
decom_c$time.series[1]
decom_c$time.series[, "seasonal"]
decom_c$time.series[, "data"]
autoplot(decom_c)
decom_c$time.series[, 1]
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
for(i in 1:4) {
decom_c$time.series[, i] <- exp(decom_c$time.series[, i])
decom_d$time.series[, i] <- exp(decom_d$time.series[, i])
}
autoplot(decom_c)
autoplot(decom_d)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
for(i in 2:4) {
decom_c$time.series[, i] <- exp(decom_c$time.series[, i])
decom_d$time.series[, i] <- exp(decom_d$time.series[, i])
}
autoplot(decom_c)
autoplot(decom_d)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- ts(data <- exp(decom_c$time.series[, 1]),
season <- exp(decom_c$time.series[, 2]),
trend <- exp(decom_c$time.series[, 3]),
remainder <- exp(decom_c$time.series[, 3]))
plot.ts(conf_m_ts)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- ts(data = exp(decom_c$time.series[, 1]),
season = exp(decom_c$time.series[, 2]),
trend = exp(decom_c$time.series[, 3]),
remainder = exp(decom_c$time.series[, 3]))
plot.ts(conf_m_ts)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- cbind(data = exp(decom_c$time.series[, 1]),
season = exp(decom_c$time.series[, 2]),
trend = exp(decom_c$time.series[, 3]),
remainder = exp(decom_c$time.series[, 3]))
plot.ts(conf_m_ts)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- cbind(data = exp(decom_c$time.series[, 1]),
season = exp(decom_c$time.series[, 2]),
trend = exp(decom_c$time.series[, 3]),
remainder = exp(decom_c$time.series[, 4]))
plot.ts(conf_m_ts)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- cbind(data = confirmed,
trend = exp(decom_c$time.series[, 2]),
seasonal = exp(decom_c$time.series[, 1]),
remainder = exp(decom_c$time.series[, 3]))
plot.ts(conf_m_ts)
data <- read.csv("data_poland.csv", sep = ";")
data <- data.frame(
date = as.Date(data$date, format = "%d.%m.%Y"),
confirmed = ts(
data$confirmed,
frequency = 7,
start = c(1, 5) #5 dzień tygodnia w R to czwartek, numeracja od niedzieli jako 1
),
deaths = ts(
data$deaths,
frequency = 7,
start = c(1, 5)
),
tests = ts(
data$tests,
frequency = 7,
start = c(1, 5)
)
)
confirmed <- data$confirmed #szereg czasowy liczby zakażeń
deaths <- data$deaths       #szereg czasowy liczby śmierci
tests <- data$tests         #szereg czasowy liczby testów
#szeregi czasowe dla I fali (od 05.03.2020 do 04.09.2020)
confirmed1 <- window(confirmed, end = weekly_freq_day_number(184))
deaths1 <- window(deaths, end = weekly_freq_day_number(184))
tests1 <- window(tests, end = weekly_freq_day_number(184))
#szeregi czasowe dla II fali (od 05.03.2020 do 19.11.2020)
confirmed2 <- window(confirmed, end = weekly_freq_day_number(260))
deaths2 <- window(deaths, end = weekly_freq_day_number(260))
tests2 <- window(tests, end = weekly_freq_day_number(260))
#szeregi czasowe dla III fali (od 05.03.2020 do 14.04.2021)
confirmed3 <- window(confirmed, end = weekly_freq_day_number(406))
deaths3 <- window(deaths, end = weekly_freq_day_number(406))
tests3 <- window(tests, end = weekly_freq_day_number(406))
#szeregi czasowe dla IV fali (od 05.03.2020 do 25.10.2021)
confirmed4 <- confirmed
deaths4 <- deaths
tests4 <- tests
c_time_series <- list(confirmed1, confirmed2, confirmed3, confirmed4)
d_time_series <- list(deaths1, deaths2, deaths3, deaths4)
View(decom_c)
View(conf_m_ts)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- cbind(confirmed,
exp(decom_c$time.series[, 2]),
exp(decom_c$time.series[, 1]),
exp(decom_c$time.series[, 3]))
deaths_m_ts <- cbind(deaths,
exp(decom_d$time.series[, 2]),
exp(decom_d$time.series[, 1]),
exp(decom_d$time.series[, 3]))
col_names <- c("data", "trend", "seasonal", "remainder")
colnames(conf_m_ts) <- col_names
colnames(deaths_m_ts) <- col_names
plot.ts(conf_m_ts)
plot.ts(deaths_m_ts)
rm(log_confirmed, log_deaths, decom_c, decom_d, conf_m_ts, deaths_m_ts, col_names )
rm(i)
rm(remainder, season, trend)
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- cbind(confirmed,
exp(decom_c$time.series[, 2]),
exp(decom_c$time.series[, 1]),
exp(decom_c$time.series[, 3]))
deaths_m_ts <- cbind(deaths,
exp(decom_d$time.series[, 2]),
exp(decom_d$time.series[, 1]),
exp(decom_d$time.series[, 3]))
col_names <- c("data", "trend", "seasonal", "remainder")
colnames(conf_m_ts) <- col_names
colnames(deaths_m_ts) <- col_names
plot.ts(conf_m_ts)
plot.ts(deaths_m_ts)
rm(log_confirmed, log_deaths, decom_c, decom_d, conf_m_ts, deaths_m_ts, col_names )
?plot
?plot.ts
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- cbind(confirmed,
exp(decom_c$time.series[, 2]),
exp(decom_c$time.series[, 1]),
exp(decom_c$time.series[, 3]))
deaths_m_ts <- cbind(deaths,
exp(decom_d$time.series[, 2]),
exp(decom_d$time.series[, 1]),
exp(decom_d$time.series[, 3]))
col_names <- c("data", "trend", "seasonal", "remainder")
colnames(conf_m_ts) <- col_names
colnames(deaths_m_ts) <- col_names
plot.ts(conf_m_ts, main = "Dekompozycja szeregu czasowego liczby zakażeń", xlab = "tydzień")
plot.ts(deaths_m_ts, main = "Dekompozycja szeregu czasowego liczby śmierci", xlab = "tydzień")
rm(log_confirmed, log_deaths, decom_c, decom_d, conf_m_ts, deaths_m_ts, col_names )
?cbind
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 21)
decom_d <- stl(log_deaths, s.window = 21)
conf_m_ts <- cbind(confirmed,
exp(decom_c$time.series[, 2]),
exp(decom_c$time.series[, 1]),
exp(decom_c$time.series[, 3]))
deaths_m_ts <- cbind(deaths,
exp(decom_d$time.series[, 2]),
exp(decom_d$time.series[, 1]),
exp(decom_d$time.series[, 3]))
col_names <- c("data", "trend", "seasonal", "remainder")
colnames(conf_m_ts) <- col_names
colnames(deaths_m_ts) <- col_names
plot.ts(conf_m_ts, main = "Dekompozycja szeregu czasowego liczby zakażeń", xlab = "tydzień")
plot.ts(deaths_m_ts, main = "Dekompozycja szeregu czasowego liczby śmierci", xlab = "tydzień")
rm(log_confirmed, log_deaths, decom_c, decom_d, conf_m_ts, deaths_m_ts, col_names )
log_confirmed <- log(confirmed)
log_confirmed[is.infinite(log_confirmed)] <- 0
log_deaths <- log(deaths)
log_deaths[is.infinite(log_deaths)] <- 0
decom_c <- stl(log_confirmed, s.window = 7)
decom_d <- stl(log_deaths, s.window = 7)
conf_m_ts <- cbind(confirmed,
exp(decom_c$time.series[, 2]),
exp(decom_c$time.series[, 1]),
exp(decom_c$time.series[, 3]))
deaths_m_ts <- cbind(deaths,
exp(decom_d$time.series[, 2]),
exp(decom_d$time.series[, 1]),
exp(decom_d$time.series[, 3]))
col_names <- c("data", "trend", "seasonal", "remainder")
colnames(conf_m_ts) <- col_names
colnames(deaths_m_ts) <- col_names
plot.ts(conf_m_ts, main = "Dekompozycja szeregu czasowego liczby zakażeń", xlab = "tydzień")
plot.ts(deaths_m_ts, main = "Dekompozycja szeregu czasowego liczby śmierci", xlab = "tydzień")
rm(log_confirmed, log_deaths, decom_c, decom_d, conf_m_ts, deaths_m_ts, col_names )
?stl
