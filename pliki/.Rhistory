autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE) +
guides(colour=guide_legend(title="Forecast"))
source("~/.active-rstudio-document")
fc <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80)
fc2 <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80,
biasadj=TRUE)
autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE)
fc <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80)
fc2 <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80,
biasadj=TRUE)
autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE)
fc <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80)
fc2 <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80,
biasadj=TRUE)
autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE) +
guides(colour=guide_legend(title="Forecast"))
autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE)
autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE)
fc <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80)
fc2 <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80,
biasadj=TRUE)
autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE) +
guides(colour=guide_legend(title="Forecast"))
fc <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80)
fc2 <- rwf(eggs, drift=TRUE, lambda=0, h=50, level=80,
biasadj=TRUE)
autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE)
autoplot(eggs) +
autolayer(fc, series="Simple back transformation") +
autolayer(fc2, series="Bias adjusted", PI=FALSE) +
guides(colour=guide_legend(title="Forecast"))
library(fpp2)
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
autoplot(usnetelec, BoxCox(usnetelec, lambdaus))
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
autoplot(usnetelec)
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
autoplot(c(usnetelec, BoxCox(usnetelec, lambdaus))
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
autoplot(c(usnetelec, BoxCox(usnetelec, lambdaus))
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
autoplot(c(usnetelec, BoxCox(usnetelec, lambdaus)))
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
autoplot(BoxCox(usnetelec, lambdaus))
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
autoplot(usnetelec) +
autolayer(BoxCox(usnetelec, lambdaus))
usnetelec %>% BoxCox.lambda() -> lambdaus
lambdaus
autoplot(usnetelec)
autoplot(BoxCox(usnetelec, lambdaus))
usnetelec %>% BoxCox.lambda() -> lambda
lambda
autoplot(usnetelec)
autoplot(BoxCox(usnetelec, lambda))
usgdp %>% BoxCox.lambda() -> lambda
lambda
autoplot(usgdp)
autoplot(BoxCox(usgdp, lambda))
mcopper %>% BoxCox.lambda() -> lambda
lambda
autoplot(mcopper)
autoplot(BoxCox(mcopper, lambda))
enplanements %>% BoxCox.lambda() -> lambdaus
lambda
autoplot(enplanements)
autoplot(BoxCox(enplanements, lambda))
cangas %>% BoxCox.lambda() -> lambda
lambda
autoplot(cangas)
autoplot(BoxCox(cangas, lambda))
library(fpp2)
beer2 <- window(ausbeer,start=1992)
ma4 <- ma(beer2, order=4, centre=FALSE)
ma2x4 <- ma(beer2, order=4, centre=TRUE)
ma4
ma2x4
beer2 <- window(ausbeer,start=1992)
ma4 <- ma(beer2, order=4, centre=FALSE)
ma2x4 <- ma(beer2, order=4, centre=TRUE)
autoplot(beer2, series="Data") +
autolayer(ma4, series="4-MA") +
autolayer(ma2x4, series="2-MAx4") +
xlab("Year") + ylab("Production")
library(fpp2)
autoplot(fc) +
autolayer(fitted(fc), series="Fitted") +
ylab("Oil (millions of tonnes)") + xlab("Year")
autoplot(fc) +
autolayer(fitted(fc), series="Fitted") +
ylab("Oil (millions of tonnes)") + xlab("Year")
oildata <- window(oil, start=1996)
# Estimate parameters
fc <- ses(oildata, h=5)
autoplot(fc) +
autolayer(fitted(fc), series="Fitted") +
ylab("Oil (millions of tonnes)") + xlab("Year")
library(fpp2)
help(gas)
help(gas)
help gold
help(gold)
help(gas)
autoplot(gas)
autoplot(gold)
autoplot(chicken)
forecast(chicken)
autoplot(forecast(chicken), PI=TRUE)
data <- window(chicken, start=1960)
# Estimate parameters
fc <- forecast(data, h=10)
autoplot(fc, PI=TRUE) +
autolayer(fitted(fc), series="Fitted") +
ylab("Oil (millions of tonnes)") + xlab("Year")
data <- window(chicken, start=1960)
# Estimate parameters
fc <- naive(data, h=10)
autoplot(fc, PI=TRUE) +
autolayer(fitted(fc), series="Fitted") +
ylab("Oil (millions of tonnes)") + xlab("Year")
data <- window(chicken, start=1960)
# Estimate parameters
fc <- naive(data, h=10)
autoplot(fc, PI=TRUE) +
autolayer(data, series="szereg czasowy") +
ylab("Oil (millions of tonnes)") + xlab("Year")
help(chicken)
data <- window(chicken, start=1960)
# Estimate parameters
fc <- naive(data, h=10)
autoplot(fc, PI=TRUE) +
autolayer(data, series="szereg czasowy") +
ylab("Ceny kurczaków w USA") + xlab("Year")
autoplot(fc, PI=TRUE) +
autolayer(data, series="szereg czasowy") +
ylab("Ceny kurczaków w USA") + xlab("Rok")
autoplot(fc, PI=TRUE) +
autolayer(data, series="szereg czasowy", color = "black") +
ylab("Ceny kurczaków w USA") + xlab("Rok")
autoplot(fc, PI=TRUE) +
autolayer(data, series="szereg czasowy", color = "black") +
ylab("Ceny kurczaków w USA") + xlab("Rok")
library(fpp2)
autoplot(fc, PI=TRUE) +
autolayer(data, series="szereg czasowy", color = "black") +
ylab("Ceny kurczaków w USA") + xlab("Rok")
autoplot(fc, PI=TRUE) +
autolayer(data, series="szereg czasowy", color = "black") +
ylab("Ceny kurczaków w USA") + xlab("Rok")
data <- window(chicken, start=1960)
# Estimate parameters
fc <- naive(data, h=10)
autoplot(fc, PI=TRUE) +
autolayer(data, series="szereg czasowy", color = "black") +
ylab("Ceny kurczaków w USA") + xlab("Rok")
data <- read.csv("D:\Studia\Praca dyplomowa\pliki\dane_polska.xlsx")
data <- read.csv("D:/Studia/Praca dyplomowa/pliki/dane_polska.xlsx")
print(data)
data <- read.csv("D:/Studia/Praca dyplomowa/pliki/dane_polska_csv.csv")
print(data)
data <- read.csv("D:/Studia/Praca dyplomowa/pliki/dane_polska_csv.csv")
print(data$zachorowania)
help("read.csv")
print(data)
read.csv("D:/Studia/Praca dyplomowa/pliki/dane_polska_csv.csv", sep=";")
print(head(data)
)
data
head(data)
data <- read.csv("D:/Studia/Praca dyplomowa/pliki/dane_polska_csv.csv", sep=";")
clc
clear()
erase()
data <- read.csv("D:/Studia/Praca dyplomowa/pliki/dane_polska_csv.csv", sep=";")
data
head(data)
head(data$zachorowania)
plot(data$zachorowania, type="l")
is.ts(data)
inds <- seq(as.Date("2014-06-01"), as.Date("2015-10-14"), by = "day")
inds <- seq(as.Date("2020-03-05"), as.Date("2021-09-30"), by = "day")
c(2014, as.numeric(format(inds[1], "%j"))
)
inds
format(inds[1], "%j")
format(inds[1])
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
sum(month_days)
day_in_year
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
return day_in_year
}
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31)
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break;
day_in_year <- day_in_year + month_days[i];
}
return day_in_year
}
day_of_year_number <- function(date) {
date <- as.Date(date);
month_number <- as.numeric(format(date, "%m"));
day_number <- as.numeric(format(date, "%d"));
year_number <- as.numeric(format(date, "%y"));
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
day_in_year <- day_number;
for (i in 1:month_number) {
if(i==month_number)
break;
day_in_year <- day_in_year + month_days[i];
}
return day_in_year;
}
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
}
day_of_year_number("2016-01-02")
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31);
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
return(day_in_year)
}
day_of_year_number("2016-01-02")
day_of_year_number("2014-06-01")
day_of_year_number("2014-12-12")
day_of_year_number("2014-12-31")
day_of_year_number("2014-01-01")
!5
!0
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30);
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
if (!year_number %% 4 && month_number > 2)
day_in_year <- day_in_year + 1
return(day_in_year)
}
day_of_year_number("2013-03-01")
day_of_year_number("2012-03-01")
day_of_year_number("2012-0")
rm(inds)
rm(fc)
rm(month_days)
View(day_of_year_number)
View(data)
rm(data)
View(day_of_year_number)
save.image("D:/Studia/Praca dyplomowa/pliki/day_of_year_number_function.RData")
setwd("D:/Studia/Praca dyplomowa/R/pliki")
load("D:/Studia/Praca dyplomowa/R/pliki/env.RData")
View(data)
View(covid_poland)
library(fpp2)
#szereg czasowy dla I fali (od 05.03.2020 do 05.08.2020) z częstotliwością tygodniową
ts7_1 <- window(covid_poland_ts7, end = weekly_freq_day_number(154))
weekly_freq_day_number <- function(obs_num) {
return(c((obs_num %/% 7) + 1, obs_num %% 7))
}
#szereg czasowy dla I fali (od 05.03.2020 do 05.08.2020) z częstotliwością tygodniową
ts7_1 <- window(covid_poland_ts7, end = weekly_freq_day_number(154))
confirmed7_4 <- covid_poland_ts7[, "tests"]
rm(confirmed7_4)
rm(ts7_1)
data <- read.csv("data_poland.csv", sep = ";")
covid_poland <- data.frame(
date = as.Date(data$date, format = "%d.%m.%Y"),
confirmed = data$confirmed,
deaths = data$deaths,
tests = data$tests)
covid_poland_ts7 <- ts(
cbind(covid_poland$confirmed,
covid_poland$deaths,
covid_poland$tests),
names = c("confirmed", "deaths", "tests"),
frequency = 7)
covid_poland_ts365 <- ts(
cbind(covid_poland$confirmed,
covid_poland$deaths,
covid_poland$tests),
names = c("confirmed", "deaths", "tests"),
frequency = 365.25,
start = c(2020, day_of_year_number("2020-03-05")))
#szeregi czasowe dla I fali (od 05.03.2020 do 05.08.2020) z częstotliwością tygodniową
confirmed7_1 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(154))
deaths7_1 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(154))
tests7_1 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(154))
#szeregi czasowe dla II fali (od 05.03.2020 do 20.10.2020) z częstotliwością tygodniową
confirmed7_2 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(230))
deaths7_2 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(230))
tests7_2 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(230))
#szeregi czasowe dla III fali (od 05.03.2020 do 15.03.2021) z częstotliwością tygodniową
confirmed7_3 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(376))
deaths_3 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(376))
tests7_3 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(376))
#szeregi czasowe dla IV fali (od 05.03.2020 do 30.09.2021) z częstotliwością tygodniową
confirmed7_4 <- covid_poland_ts7[, "confirmed"]
confirmed7_4 <- covid_poland_ts7[, "deaths"]
confirmed7_4 <- covid_poland_ts7[, "tests"]
rm(deaths_3)
data <- read.csv("data_poland.csv", sep = ";")
covid_poland <- data.frame(
date = as.Date(data$date, format = "%d.%m.%Y"),
confirmed = data$confirmed,
deaths = data$deaths,
tests = data$tests)
covid_poland_ts7 <- ts(
cbind(covid_poland$confirmed,
covid_poland$deaths,
covid_poland$tests),
names = c("confirmed", "deaths", "tests"),
frequency = 7)
covid_poland_ts365 <- ts(
cbind(covid_poland$confirmed,
covid_poland$deaths,
covid_poland$tests),
names = c("confirmed", "deaths", "tests"),
frequency = 365.25,
start = c(2020, day_of_year_number("2020-03-05")))
#szeregi czasowe dla I fali (od 05.03.2020 do 05.08.2020) z częstotliwością tygodniową
confirmed7_1 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(154))
deaths7_1 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(154))
tests7_1 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(154))
#szeregi czasowe dla II fali (od 05.03.2020 do 20.10.2020) z częstotliwością tygodniową
confirmed7_2 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(230))
deaths7_2 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(230))
tests7_2 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(230))
#szeregi czasowe dla III fali (od 05.03.2020 do 15.03.2021) z częstotliwością tygodniową
confirmed7_3 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(376))
deaths7_3 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(376))
tests7_3 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(376))
#szeregi czasowe dla IV fali (od 05.03.2020 do 30.09.2021) z częstotliwością tygodniową
confirmed7_4 <- covid_poland_ts7[, "confirmed"]
deaths7_4 <- covid_poland_ts7[, "deaths"]
tests7_4 <- covid_poland_ts7[, "tests"]
data <- read.csv("data_poland.csv", sep = ";")
covid_poland <- data.frame(
date = as.Date(data$date, format = "%d.%m.%Y"),
confirmed = data$confirmed,
deaths = data$deaths,
tests = data$tests)
covid_poland_ts7 <- ts(
cbind(covid_poland$confirmed,
covid_poland$deaths,
covid_poland$tests),
names = c("confirmed", "deaths", "tests"),
frequency = 7)
covid_poland_ts365 <- ts(
cbind(covid_poland$confirmed,
covid_poland$deaths,
covid_poland$tests),
names = c("confirmed", "deaths", "tests"),
frequency = 365.25,
start = c(2020, day_of_year_number("2020-03-05")))
#szeregi czasowe dla I fali (od 05.03.2020 do 05.08.2020) z częstotliwością tygodniową
confirmed7_1 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(154))
deaths7_1 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(154))
tests7_1 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(154))
#szeregi czasowe dla II fali (od 05.03.2020 do 20.10.2020) z częstotliwością tygodniową
confirmed7_2 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(230))
deaths7_2 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(230))
tests7_2 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(230))
#szeregi czasowe dla III fali (od 05.03.2020 do 15.03.2021) z częstotliwością tygodniową
confirmed7_3 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(376))
deaths7_3 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(376))
tests7_3 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(376))
#szeregi czasowe dla IV fali (od 05.03.2020 do 30.09.2021) z częstotliwością tygodniową
confirmed7_4 <- covid_poland_ts7[, "confirmed"]
deaths7_4 <- covid_poland_ts7[, "deaths"]
tests7_4 <- covid_poland_ts7[, "tests"]
#szeregi czasowe dla I fali (od 05.03.2020 do 05.08.2020) z częstotliwością roczną
confirmed365_1 <- window(covid_poland_ts365[, "confirmed"], end = c(2020, day_of_year_number("2020-08-05")))
deaths365_1 <- window(covid_poland_ts365[, "deaths"], end = c(2020, day_of_year_number("2020-08-05")))
tests365_1 <- window(covid_poland_ts365[, "tests"], end = c(2020, day_of_year_number("2020-08-05")))
#szeregi czasowe dla II fali (od 05.03.2020 do 20.10.2020) z częstotliwością roczną
confirmed365_2 <- window(covid_poland_ts365[, "confirmed"], end = c(2020, day_of_year_number("2020-10-20")))
deaths365_2 <- window(covid_poland_ts365[, "deaths"], end = c(2020, day_of_year_number("2020-10-20")))
tests365_2 <- window(covid_poland_ts365[, "tests"], end = c(2020, day_of_year_number("2020-10-20")))
#szeregi czasowe dla III fali (od 05.03.2020 do 15.03.2021) z częstotliwością roczną
confirmed365_3 <- window(covid_poland_ts365[, "confirmed"], end = c(2021, day_of_year_number("2021-03-15")))
deaths365_3 <- window(covid_poland_ts365[, "deaths"], end = c(2021, day_of_year_number("2021-03-15")))
tests365_3 <- window(covid_poland_ts365[, "tests"], end = c(2021, day_of_year_number("2021-03-15")))
#szeregi czasowe dla IV fali (od 05.03.2020 do 30.09.2021) z częstotliwością roczną
confirmed365_4 <- covid_poland_ts365[, "confirmed"]
deaths365_4 <- covid_poland_ts365[, "deaths"]
tests365_4 <- covid_poland_ts365[, "tests"]
day_of_year_number("2020-03-15")
day_of_year_number("2021-03-15")
covid_poland_ts365
View(covid_poland_ts365)
tail(confirmed365_3)
data <- read.csv("data_poland.csv", sep = ";")
covid_poland <- data.frame(
date = as.Date(data$date, format = "%d.%m.%Y"),
confirmed = data$confirmed,
deaths = data$deaths,
tests = data$tests)
covid_poland_ts7 <- ts(
cbind(covid_poland$confirmed,
covid_poland$deaths,
covid_poland$tests),
names = c("confirmed", "deaths", "tests"),
frequency = 7)
covid_poland_ts365 <- ts(
cbind(covid_poland$confirmed,
covid_poland$deaths,
covid_poland$tests),
names = c("confirmed", "deaths", "tests"),
frequency = 365.25,
start = c(2020, day_of_year_number("2020-03-05")))
#szeregi czasowe dla I fali (od 05.03.2020 do 05.08.2020) z częstotliwością tygodniową
confirmed7_1 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(154))
deaths7_1 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(154))
tests7_1 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(154))
#szeregi czasowe dla II fali (od 05.03.2020 do 20.10.2020) z częstotliwością tygodniową
confirmed7_2 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(230))
deaths7_2 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(230))
tests7_2 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(230))
#szeregi czasowe dla III fali (od 05.03.2020 do 15.03.2021) z częstotliwością tygodniową
confirmed7_3 <- window(covid_poland_ts7[, "confirmed"], end = weekly_freq_day_number(376))
deaths7_3 <- window(covid_poland_ts7[, "deaths"], end = weekly_freq_day_number(376))
tests7_3 <- window(covid_poland_ts7[, "tests"], end = weekly_freq_day_number(376))
#szeregi czasowe dla IV fali (od 05.03.2020 do 30.09.2021) z częstotliwością tygodniową
confirmed7_4 <- covid_poland_ts7[, "confirmed"]
deaths7_4 <- covid_poland_ts7[, "deaths"]
tests7_4 <- covid_poland_ts7[, "tests"]
#szeregi czasowe dla I fali (od 05.03.2020 do 05.08.2020) z częstotliwością roczną
confirmed365_1 <- window(covid_poland_ts365[, "confirmed"], end = c(2020, day_of_year_number("2020-08-05")))
deaths365_1 <- window(covid_poland_ts365[, "deaths"], end = c(2020, day_of_year_number("2020-08-05")))
tests365_1 <- window(covid_poland_ts365[, "tests"], end = c(2020, day_of_year_number("2020-08-05")))
#szeregi czasowe dla II fali (od 05.03.2020 do 20.10.2020) z częstotliwością roczną
confirmed365_2 <- window(covid_poland_ts365[, "confirmed"], end = c(2020, day_of_year_number("2020-10-20")))
deaths365_2 <- window(covid_poland_ts365[, "deaths"], end = c(2020, day_of_year_number("2020-10-20")))
tests365_2 <- window(covid_poland_ts365[, "tests"], end = c(2020, day_of_year_number("2020-10-20")))
#szeregi czasowe dla III fali (od 05.03.2020 do 15.03.2021) z częstotliwością roczną
confirmed365_3 <- window(covid_poland_ts365[, "confirmed"], end = c(2021, day_of_year_number("2021-03-15") + 1))
deaths365_3 <- window(covid_poland_ts365[, "deaths"], end = c(2021, day_of_year_number("2021-03-15") + 1))
tests365_3 <- window(covid_poland_ts365[, "tests"], end = c(2021, day_of_year_number("2021-03-15") + 1))
#szeregi czasowe dla IV fali (od 05.03.2020 do 30.09.2021) z częstotliwością roczną
confirmed365_4 <- covid_poland_ts365[, "confirmed"]
deaths365_4 <- covid_poland_ts365[, "deaths"]
tests365_4 <- covid_poland_ts365[, "tests"]
save.image("D:/Studia/Praca dyplomowa/R/pliki/env.RData")
