#ACF/PACF
for (i in 1:4) {
tsdisplay(c_time_series[[i]], main = paste("Wykresy dla szeregu czasowego zakażeń dla ", i, " fali"))
tsdisplay(d_time_series[[i]], main = paste("Wykresy dla szeregu czasowego śmierci dla ", i, " fali"))
}
x_values <- c("Nie", "Pon", "Wto", "Śro", "Czw", "Pią", "Sob")
confirmed_time_plots <- list()
deaths_time_plots <- list()
confirmed_season_plots <- list()
deaths_season_plots <- list()
i <- 1
begin <- 1;
finish <- begin + 99
while(begin < length(data7[, 1])) {
if(finish > length(data7[, 1]))
finish = length(data7[, 1])
confirmed_ts <- window(confirmed, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
deaths_ts <- window(deaths, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
title_time <- paste(data$date[begin], " do ", data$date[finish])
confirmed_time_plots[[i]] <- autoplot(confirmed_ts, main = paste("Wykres czasowy zakażeń od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
deaths_time_plots[[i]] <- autoplot(deaths_ts, main = paste("Wykres czasowy śmierci od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
confirmed_season_plots[[i]] <- ggseasonplot(confirmed_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy zakażeń od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba zakażeń")
deaths_season_plots[[i]] <- ggseasonplot(deaths_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy śmierci od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba śmierci")
begin <- finish + 1
finish <- begin + 99
i <- i + 1
}
grid.arrange(grobs = confirmed_time_plots, ncol = 2)
grid.arrange(grobs = deaths_time_plots, ncol = 2)
grid.arrange(grobs = confirmed_season_plots, ncol = 2)
grid.arrange(grobs = deaths_season_plots, ncol = 2)
rm(begin, finish, i, x_values, title_time, confirmed_time_plots, confirmed_season_plots, deaths_time_plots, deaths_time_plots)
x_values <- c("Nie", "Pon", "Wto", "Śro", "Czw", "Pią", "Sob")
confirmed_time_plots <- list()
deaths_time_plots <- list()
confirmed_season_plots <- list()
deaths_season_plots <- list()
i <- 1
begin <- 1;
finish <- begin + 99
while(begin < length(data7[, 1])) {
if(finish > length(data7[, 1]))
finish = length(data7[, 1])
confirmed_ts <- window(confirmed, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
deaths_ts <- window(deaths, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
title_time <- paste(data$date[begin], " do ", data$date[finish])
confirmed_time_plots[[i]] <- autoplot(confirmed_ts, main = paste("Wykres czasowy zakażeń od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
deaths_time_plots[[i]] <- autoplot(deaths_ts, main = paste("Wykres czasowy śmierci od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
confirmed_season_plots[[i]] <- ggseasonplot(confirmed_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy zakażeń od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba zakażeń")
deaths_season_plots[[i]] <- ggseasonplot(deaths_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy śmierci od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba śmierci")
begin <- finish + 1
finish <- begin + 99
i <- i + 1
}
grid.arrange(grobs = confirmed_time_plots, ncol = 2)
grid.arrange(grobs = deaths_time_plots, ncol = 2)
grid.arrange(grobs = confirmed_season_plots, ncol = 2)
grid.arrange(grobs = deaths_season_plots, ncol = 2)
rm(begin, finish, i, x_values, title_time, confirmed_time_plots, confirmed_season_plots, deaths_time_plots, deaths_season_plots)
confirmed_plots <- list()
deaths_plots <- list()
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
confirmed_plots[[2*i - 1]] <- autoplot(decom_c_a, title = paste(title_c, i, " fali - model addytywny"))
confirmed_plots[[2*i]] <- autoplot(decom_c_m, title = paste(title_c, i, " fali - model multiplikatywny"))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
deaths_plots[[2*i - 1]] <- autoplot(decom_d_a, title = paste(title_d, i, " fali - model addytywny"))
deaths_plots[[2*i]] <- autoplot(decom_d_m, title = paste(title_d, i, " fali - model multiplikatywny"))
}
grid.arrange(grobs = confirmed_plots, ncol = 2)
grid.arrange(grobs = deaths_plots, ncol = 2)
rm(confirmed_plots, deaths_plots, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d)
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a, title = paste(title_c, i, " fali - model addytywny"))
c_plot_m <- autoplot(decom_c_m, title = paste(title_c, i, " fali - model multiplikatywny"))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a, title = paste(title_d, i, " fali - model addytywny"))
d_plot_m <- autoplot(decom_d_m, title = paste(title_d, i, " fali - model multiplikatywny"))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots)
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
theme(title = paste(title_c, i, " fali - model addytywny"))
c_plot_m <- autoplot(decom_c_m) +
theme(title = paste(title_c, i, " fali - model multiplikatywny"))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
theme(title = paste(title_d, i, " fali - model addytywny"))
d_plot_m <- autoplot(decom_d_m) +
theme(title = paste(title_d, i, " fali - model multiplikatywny"))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots)
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
theme(title = element_text(paste(title_c, i, " fali - model addytywny")))
c_plot_m <- autoplot(decom_c_m) +
theme(title = element_text(paste(title_c, i, " fali - model multiplikatywny")))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
theme(title = element_text(paste(title_d, i, " fali - model addytywny")))
d_plot_m <- autoplot(decom_d_m) +
theme(title = element_text(paste(title_d, i, " fali - model multiplikatywny")))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots)
warnings()
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, i, " fali - model addytywny"))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, i, " fali - model multiplikatywny"))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, i, " fali - model addytywny"))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, i, " fali - model multiplikatywny"))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots)
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 10))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 10))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 10))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 10))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots)
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 8))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 8))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 8))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 8))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots)
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 7))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 7))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 7))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 7))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots)
rm(covid_poland, covid_poland_ts7, covid_poland_ts365)
rm(data7)
rm(decom_a, decom_a1, decom_a3, decom_m, decom_m1, decom_m3)
rm(p_a, p_a1, p_a3, p_m, p_m1, p_m3, stl_decom)
rm(confirmed365, confirmed365_1, confirmed365_2, confirmed365_3, confirmed365_4, confirmed7, confirmed7_1, confirmed7_2, confirmed7_3, confirmed7_4)
rm(confirmed_ts, deaths_ts, deaths7, deaths7_1, deaths7_2, deaths7_3, deaths7_4, deaths365, deaths365_1, deaths365_2, deaths365_3, deaths365_4)
rm(tests365, tests365_1, tests365_2, tests365_3, tests365_4, tests7, tests7_1, tests7_2, tests7_3, tests7_4)
rm(i)
data <- read.csv("data_poland.csv", sep = ";")
data <- data.frame(
date = as.Date(data$date, format = "%d.%m.%Y"),
confirmed = ts(
data$confirmed,
frequency = 7,
start = c(1, 5) #5 dzień tygodnia w R to czwartek, numeracja od niedzieli jako 1
),
deaths = ts(
data$deaths,
frequency = 7,
start = c(1, 5)
),
tests = ts(
data$tests,
frequency = 7,
start = c(1, 5)
)
)
confirmed <- data$confirmed
deaths <- data$deaths
tests <- data$tests
#szeregi czasowe dla I fali (od 05.03.2020 do 05.08.2020)
confirmed1 <- window(confirmed, end = weekly_freq_day_number(154))
deaths1 <- window(deaths, end = weekly_freq_day_number(154))
tests1 <- window(tests, end = weekly_freq_day_number(154))
#szeregi czasowe dla II fali (od 05.03.2020 do 20.10.2020)
confirmed2 <- window(confirmed, end = weekly_freq_day_number(230))
deaths2 <- window(deaths, end = weekly_freq_day_number(230))
tests2 <- window(tests, end = weekly_freq_day_number(230))
#szeregi czasowe dla III fali (od 05.03.2020 do 15.03.2021)
confirmed3 <- window(confirmed, end = weekly_freq_day_number(376))
deaths3 <- window(deaths, end = weekly_freq_day_number(376))
tests3 <- window(tests, end = weekly_freq_day_number(376))
#szeregi czasowe dla IV fali (od 05.03.2020 do 30.09.2021)
confirmed4 <- confirmed
deaths4 <- deaths
tests4 <- tests
c_time_series <- list(confirmed1, confirmed2, confirmed3, confirmed4)
d_time_series <- list(deaths1, deaths2, deaths3, deaths4)
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30);
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
if (!(year_number %% 4) && month_number > 2)
day_in_year <- day_in_year + 1
return(day_in_year)
}
weekly_freq_day_number <- function(obs_num) {
return(c(((obs_num + 4) %/% 7) + 1, (obs_num + 4) %% 7)) #dodawanie 4 ze względu na pierwszą obserwację (5 dzień tygodnia)
}
x_values <- c("Nie", "Pon", "Wto", "Śro", "Czw", "Pią", "Sob")
confirmed_time_plots <- list()
deaths_time_plots <- list()
confirmed_season_plots <- list()
deaths_season_plots <- list()
i <- 1
begin <- 1;
finish <- begin + 99
while(begin < length(data7[, 1])) {
if(finish > length(data7[, 1]))
finish = length(data7[, 1])
confirmed_ts <- window(confirmed, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
deaths_ts <- window(deaths, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
title_time <- paste(data$date[begin], " do ", data$date[finish])
confirmed_time_plots[[i]] <- autoplot(confirmed_ts, main = paste("Wykres czasowy zakażeń od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
deaths_time_plots[[i]] <- autoplot(deaths_ts, main = paste("Wykres czasowy śmierci od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
confirmed_season_plots[[i]] <- ggseasonplot(confirmed_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy zakażeń od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba zakażeń")
deaths_season_plots[[i]] <- ggseasonplot(deaths_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy śmierci od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba śmierci")
begin <- finish + 1
finish <- begin + 99
i <- i + 1
}
grid.arrange(grobs = confirmed_time_plots, ncol = 2)
grid.arrange(grobs = deaths_time_plots, ncol = 2)
grid.arrange(grobs = confirmed_season_plots, ncol = 2)
grid.arrange(grobs = deaths_season_plots, ncol = 2)
rm(begin, finish, i, x_values, title_time, confirmed_time_plots, confirmed_season_plots, deaths_time_plots, deaths_season_plots)
x_values <- c("Nie", "Pon", "Wto", "Śro", "Czw", "Pią", "Sob")
confirmed_time_plots <- list()
deaths_time_plots <- list()
confirmed_season_plots <- list()
deaths_season_plots <- list()
i <- 1
begin <- 1;
finish <- begin + 99
while(begin < length(data7[, 1])) {
if(finish > length(data7[, 1]))
finish = length(data7[, 1])
confirmed_ts <- window(confirmed, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
deaths_ts <- window(deaths, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
title_time <- paste(data$date[begin], " do ", data$date[finish])
confirmed_time_plots[[i]] <- autoplot(confirmed_ts, main = paste("Wykres czasowy zakażeń od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
deaths_time_plots[[i]] <- autoplot(deaths_ts, main = paste("Wykres czasowy śmierci od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
confirmed_season_plots[[i]] <- ggseasonplot(confirmed_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy zakażeń od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba zakażeń")
deaths_season_plots[[i]] <- ggseasonplot(deaths_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy śmierci od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba śmierci")
begin <- finish + 1
finish <- begin + 99
i <- i + 1
}
grid.arrange(grobs = confirmed_time_plots, ncol = 2)
grid.arrange(grobs = deaths_time_plots, ncol = 2)
grid.arrange(grobs = confirmed_season_plots, ncol = 2)
grid.arrange(grobs = deaths_season_plots, ncol = 2)
rm(begin, finish, i, x_values, title_time, confirmed_time_plots, confirmed_season_plots, deaths_time_plots, deaths_season_plots)
x_values <- c("Nie", "Pon", "Wto", "Śro", "Czw", "Pią", "Sob")
confirmed_time_plots <- list()
deaths_time_plots <- list()
confirmed_season_plots <- list()
deaths_season_plots <- list()
i <- 1
begin <- 1;
finish <- begin + 99
while(begin < length(data[, 1])) {
if(finish > length(data[, 1]))
finish = length(data[, 1])
confirmed_ts <- window(confirmed, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
deaths_ts <- window(deaths, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
title_time <- paste(data$date[begin], " do ", data$date[finish])
confirmed_time_plots[[i]] <- autoplot(confirmed_ts, main = paste("Wykres czasowy zakażeń od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
deaths_time_plots[[i]] <- autoplot(deaths_ts, main = paste("Wykres czasowy śmierci od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
confirmed_season_plots[[i]] <- ggseasonplot(confirmed_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy zakażeń od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba zakażeń")
deaths_season_plots[[i]] <- ggseasonplot(deaths_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy śmierci od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba śmierci")
begin <- finish + 1
finish <- begin + 99
i <- i + 1
}
grid.arrange(grobs = confirmed_time_plots, ncol = 2)
grid.arrange(grobs = deaths_time_plots, ncol = 2)
grid.arrange(grobs = confirmed_season_plots, ncol = 2)
grid.arrange(grobs = deaths_season_plots, ncol = 2)
rm(begin, finish, i, x_values, title_time, confirmed_time_plots, confirmed_season_plots, deaths_time_plots, deaths_season_plots)
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 7))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 7))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 7))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 7))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots)
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 7))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 7))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = 7))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = 7))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots, i)
x_values <- c("Nie", "Pon", "Wto", "Śro", "Czw", "Pią", "Sob")
confirmed_time_plots <- list()
deaths_time_plots <- list()
confirmed_season_plots <- list()
deaths_season_plots <- list()
i <- 1
begin <- 1;
finish <- begin + 99
while(begin < length(data[, 1])) {
if(finish > length(data[, 1]))
finish = length(data[, 1])
confirmed_ts <- window(confirmed, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
deaths_ts <- window(deaths, start = weekly_freq_day_number(begin), end = weekly_freq_day_number(finish))
title_time <- paste(data$date[begin], " do ", data$date[finish])
confirmed_time_plots[[i]] <- autoplot(confirmed_ts, main = paste("Wykres czasowy zakażeń od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
deaths_time_plots[[i]] <- autoplot(deaths_ts, main = paste("Wykres czasowy śmierci od ", title_time),
xlab = "tydzień", ylab = "liczba zakażeń") +
theme(plot.title = element_text(size = 10))
confirmed_season_plots[[i]] <- ggseasonplot(confirmed_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy zakażeń od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba zakażeń")
deaths_season_plots[[i]] <- ggseasonplot(deaths_ts, year.labels = TRUE, year.labels.left = TRUE, season.labels = x_values) +
theme(plot.title = element_text(size = 10)) +
ggtitle(paste("Wykres sezonowy śmierci od ", title_time)) + xlab("dzień tygodnia") + ylab("liczba śmierci")
begin <- finish + 1
finish <- begin + 99
i <- i + 1
}
grid.arrange(grobs = confirmed_time_plots, ncol = 2)
grid.arrange(grobs = deaths_time_plots, ncol = 2)
grid.arrange(grobs = confirmed_season_plots, ncol = 2)
grid.arrange(grobs = deaths_season_plots, ncol = 2)
rm(begin, finish, i, x_values, title_time, confirmed_time_plots, confirmed_season_plots, deaths_time_plots, deaths_season_plots,
confirmed_ts, deaths_ts)
text_size <- 7
for (i in 1:4) {
decom_c_a <- decompose(c_time_series[[i]], type = "additive")
decom_c_m <- decompose(c_time_series[[i]], type = "multiplicative")
title_c <- "Dekompozycja szeregu czasowego zakażeń dla "
c_plot_a <- autoplot(decom_c_a) +
labs(title = paste(title_c, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = text_size))
c_plot_m <- autoplot(decom_c_m) +
labs(title = paste(title_c, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = text_size))
decom_d_a <- decompose(d_time_series[[i]], type = "additive")
decom_d_m <- decompose(d_time_series[[i]], type = "multiplicative")
title_d <- "Dekompozycja szeregu czasowego śmierci dla "
d_plot_a <- autoplot(decom_d_a) +
labs(title = paste(title_d, i, " fali - model addytywny")) +
theme(plot.title = element_text(size = text_size))
d_plot_m <- autoplot(decom_d_m) +
labs(title = paste(title_d, i, " fali - model multiplikatywny")) +
theme(plot.title = element_text(size = text_size))
plots <- list(c_plot_a, c_plot_m, d_plot_a, d_plot_m)
grid.arrange(grobs = plots, ncol = 2)
}
rm(c_plot_a, d_plot_a, c_plot_m, d_plot_m, decom_c_a, decom_c_m, title_c, decom_d_a, decom_d_m, title_d, plots, i, text_size)
