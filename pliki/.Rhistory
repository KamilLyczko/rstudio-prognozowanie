if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
return(day_in_year)
}
day_of_year_number("2016-01-02")
day_of_year_number("2014-06-01")
day_of_year_number("2014-12-12")
day_of_year_number("2014-12-31")
day_of_year_number("2014-01-01")
!5
!0
day_of_year_number <- function(date) {
date <- as.Date(date)
month_number <- as.numeric(format(date, "%m"))
day_number <- as.numeric(format(date, "%d"))
year_number <- as.numeric(format(date, "%y"))
month_days <- c(31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30);
day_in_year <- day_number
for (i in 1:month_number) {
if(i==month_number)
break
day_in_year <- day_in_year + month_days[i]
}
if (!year_number %% 4 && month_number > 2)
day_in_year <- day_in_year + 1
return(day_in_year)
}
day_of_year_number("2013-03-01")
day_of_year_number("2012-03-01")
day_of_year_number("2012-0")
rm(inds)
rm(fc)
rm(month_days)
View(day_of_year_number)
View(data)
rm(data)
View(day_of_year_number)
save.image("D:/Studia/Praca dyplomowa/pliki/day_of_year_number_function.RData")
setwd("D:/Studia/Praca dyplomowa/R/rstudio-prognozowanie/pliki")
load("D:/Studia/Praca dyplomowa/R/rstudio-prognozowanie/pliki/.RData")
library(forecast)
library(ggplot2)
library(expsmooth)
library(GGally)
library(pdp)
library(stats)
library(ggtext)
?forecast
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecasts <- naive_forecasts(confirmed1.train, 30)
c1_naive_forecasts$naive$lower
save_forecasts_to_csv <- function(forecast, file_name) {
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
interval_lower = forecast$lower,
interval_upper = forecast$upper
)
write.csv(df, file_name)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
getwd()
save_forecasts_to_csv <- function(forecast, file_name) {
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
interval_lower = forecast$lower,
interval_upper = forecast$upper
)
write.csv2(df, file_name)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive2.csv")
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
interval_lower = forecast$lower,
interval_upper = forecast$upper
)
write.csv2(df, file_name, col.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
interval_lower = forecast$lower,
interval_upper = forecast$upper
)
write.csv2(df, file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
c1_naive_forecasts$naive$lower[, 1]
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
names <- c()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names[i] <- paste("interval ", forecast$level[i], "%")
colnames(intervals_list[[i]], names)
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
intervals_list
)
write.csv2(df, file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
names <- c()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names[i] <- paste("interval ", forecast$level[i], "%")
colnames(intervals_list[[i]], names[i])
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
intervals_list
)
write.csv2(df, file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
names <- c()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names[i] <- paste("interval ", forecast$level[i], "%")
colnames(intervals_list[[i]]) <- names[i]
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
intervals_list
)
write.csv2(df, file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower ", forecast$level[i], "%"),
paste("upper ", forecast$level[i], "%")
)
colnames(intervals_list[[i]]) <- names
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
intervals_list
)
write.csv2(df, file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower_", forecast$level[i], "%"),
paste("upper_", forecast$level[i], "%")
)
colnames(intervals_list[[i]]) <- names
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
intervals_list
)
write.csv2(df, file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower_", forecast$level[i], "%"),
paste("upper_", forecast$level[i], "%")
)
colnames(intervals_list[[i]]) <- names
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean,
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower_", forecast$level[i], "%"),
paste("upper_", forecast$level[i], "%")
)
colnames(intervals_list[[i]]) <- names
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
?paste
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower", forecast$level[i], "%", collapse),
paste("upper", forecast$level[i], "%", collapse)
)
colnames(intervals_list[[i]]) <- names
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste0("lower", forecast$level[i], "%", collapse),
paste0("upper", forecast$level[i], "%", collapse)
)
colnames(intervals_list[[i]]) <- names
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower", forecast$level[i], "%", sep = ""),
paste("upper", forecast$level[i], "%", sep = "")
)
colnames(intervals_list[[i]]) <- names
}
df <- data.frame(
h = c(1:length(forecast$mean)),
prediction = forecast$mean
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
time(c1_naive_forecasts$naive$mean[1])
index(c1_naive_forecasts$naive$mean[1])
c1_naive_forecasts$naive$series
time(confirmed[1])
library(zoo)
index(confirmed[1])
confirmed[1]
time(confirmed)
#funkcja zwracająca liczbę zmiennoprzecinkową będącą indeksem w obiekcie ts
#argument jako numer obserwacji
get_index_of_obs <- function(ts, obs_num) {
return(time(ts)[obs_num])
}
get_index_of_obs(c1_naive_forecasts$naive$mean, 1)
get_date_of_obs_ts(23.57143)
View(data)
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower", forecast$level[i], "%", sep = ""),
paste("upper", forecast$level[i], "%", sep = "")
)
colnames(intervals_list[[i]]) <- names
}
start_date <- get_date_of_obs_ts(get_index_of_obs(forecast$mean, 1))
dates <- c(start_date:(start_date+length(forecast$mean) - 1))
df <- data.frame(
h = c(1:length(forecast$mean)),
date = dates,
prediction = forecast$mean
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower", forecast$level[i], "%", sep = ""),
paste("upper", forecast$level[i], "%", sep = "")
)
colnames(intervals_list[[i]]) <- names
}
start_date <- as.Date(get_date_of_obs_ts(get_index_of_obs(forecast$mean, 1)))
dates <- c(start_date:(start_date+length(forecast$mean) - 1))
df <- data.frame(
h = c(1:length(forecast$mean)),
date = dates,
prediction = forecast$mean
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower", forecast$level[i], "%", sep = ""),
paste("upper", forecast$level[i], "%", sep = "")
)
colnames(intervals_list[[i]]) <- names
}
start_date <- as.Date(get_date_of_obs_ts(get_index_of_obs(forecast$mean, 1)))
dates <- c(start_date:(start_date+length(forecast$mean) - 1))
df <- data.frame(
h = c(1:length(forecast$mean)),
date = as.Date(dates),
prediction = forecast$mean
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower", forecast$level[i], "%", sep = ""),
paste("upper", forecast$level[i], "%", sep = "")
)
colnames(intervals_list[[i]]) <- names
}
start_date <- as.Date(get_date_of_obs_ts(get_index_of_obs(forecast$mean, 1)))
dates <- as.Date(c(start_date:(start_date+length(forecast$mean) - 1)))
df <- data.frame(
h = c(1:length(forecast$mean)),
date = format(dates, "%d.%m.%Y"),
prediction = forecast$mean
)
write.csv2(cbind(df, intervals_list), file_name, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv <- function(forecast, file_name) {
intervals_list <- list()
for(i in 1:length(forecast$level)) {
intervals_list[[i]] <- data.frame(
forecast$lower[, i],
forecast$upper[, i]
)
names <- c(
paste("lower", forecast$level[i], "%", sep = ""),
paste("upper", forecast$level[i], "%", sep = "")
)
colnames(intervals_list[[i]]) <- names
}
start_date <- as.Date(get_date_of_obs_ts(get_index_of_obs(forecast$mean, 1)))
dates <- as.Date(c(start_date:(start_date+length(forecast$mean) - 1)))
df <- data.frame(
h = c(1:length(forecast$mean)),
date = format(dates, "%d.%m.%Y"),
prediction = forecast$mean
)
directory <- paste("data_sheets/", file_name, sep = "")
write.csv2(cbind(df, intervals_list), directory, row.names = FALSE)
}
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
save_forecasts_to_csv(c1_naive_forecasts$naive, "naive.csv")
data <- read.csv("data_sheets/data_poland.csv", sep = ";")
View(data)
data <- read.csv("data_sheets/data_poland.csv", sep = ";")
data <- data.frame(
date = as.Date(data$date, format = "%d.%m.%Y"),
confirmed = ts(
data$confirmed,
frequency = 7,
start = c(1, 5) #5 dzień tygodnia w R to czwartek, numeracja od niedzieli jako 1
),
deaths = ts(
data$deaths,
frequency = 7,
start = c(1, 5)
),
tests = ts(
data$tests,
frequency = 7,
start = c(1, 5)
)
)
confirmed <- data$confirmed #szereg czasowy liczby zakażeń
deaths <- data$deaths       #szereg czasowy liczby śmierci
tests <- data$tests         #szereg czasowy liczby testów
#szeregi czasowe dla I fali (od 05.03.2020 do 04.09.2020)
confirmed1 <- window(confirmed, end = weekly_freq_day_number(184))
deaths1 <- window(deaths, end = weekly_freq_day_number(184))
tests1 <- window(tests, end = weekly_freq_day_number(184))
#szeregi czasowe dla II fali (od 05.03.2020 do 19.11.2020)
confirmed2 <- window(confirmed, end = weekly_freq_day_number(260))
deaths2 <- window(deaths, end = weekly_freq_day_number(260))
tests2 <- window(tests, end = weekly_freq_day_number(260))
#szeregi czasowe dla III fali (od 05.03.2020 do 14.04.2021)
confirmed3 <- window(confirmed, end = weekly_freq_day_number(406))
deaths3 <- window(deaths, end = weekly_freq_day_number(406))
tests3 <- window(tests, end = weekly_freq_day_number(406))
#szeregi czasowe dla IV fali (od 05.03.2020 do 25.10.2021)
confirmed4 <- confirmed
deaths4 <- deaths
tests4 <- tests
c_time_series <- list(confirmed1, confirmed2, confirmed3, confirmed4)
d_time_series <- list(deaths1, deaths2, deaths3, deaths4)
View(data)
#Prognozy metod naiwnych liczby zakażeń dla I fali
confirmed1.train <- window(confirmed1, end = weekly_freq_day_number(length(confirmed1) - 30))
confirmed1.test <- window(confirmed1, start = weekly_freq_day_number(length(confirmed1) - 29))
c1_naive_forecasts <- naive_forecasts(confirmed1.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby zakażeń dla I fali"
plot_title2 <- "Porównanie prognoz liczby zakażeń z szeregiem testowym dla I fali"
generate_naive_forecasts_plot(confirmed1.train, c1_naive_forecasts, plot_title1, "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed1.test, c1_naive_forecasts, plot_title2, "liczba zakażeń")
rm(confirmed1.train, confirmed1.test, c1_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby zakażeń dla II fali
confirmed2.train <- window(confirmed2, end = weekly_freq_day_number(length(confirmed2) - 30))
confirmed2.test <- window(confirmed2, start = weekly_freq_day_number(length(confirmed2) - 29))
c2_naive_forecasts <- naive_forecasts(confirmed2.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby zakażeń dla II fali"
plot_title2 <- "Porównanie prognoz liczby zakażeń z szeregiem testowym dla II fali"
generate_naive_forecasts_plot(confirmed2.train, c2_naive_forecasts, plot_title1, "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed2.test, c2_naive_forecasts, plot_title2, "liczba zakażeń")
rm(confirmed2.train, confirmed2.test, c2_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby zakażeń dla III fali
confirmed3.train <- window(confirmed3, end = weekly_freq_day_number(length(confirmed3) - 30))
confirmed3.test <- window(confirmed3, start = weekly_freq_day_number(length(confirmed3) - 29))
c3_naive_forecasts <- naive_forecasts(confirmed3.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby zakażeń dla III fali"
plot_title2 <- "Porównanie prognoz liczby zakażeń z szeregiem testowym dla III fali"
generate_naive_forecasts_plot(confirmed3.train, c3_naive_forecasts, plot_title1, "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed3.test, c3_naive_forecasts, plot_title2, "liczba zakażeń")
rm(confirmed3.train, confirmed3.test, c3_naive_forecasts, plot_title1, plot_title2)
#Prognozy metod naiwnych liczby zakażeń dla IV fali
confirmed4.train <- window(confirmed4, end = weekly_freq_day_number(length(confirmed4) - 30))
confirmed4.test <- window(confirmed4, start = weekly_freq_day_number(length(confirmed4) - 29))
c4_naive_forecasts <- naive_forecasts(confirmed4.train, 30)
plot_title1 <- "Prognozy metody naiwnej liczby zakażeń dla IV fali"
plot_title2 <- "Porównanie prognoz liczby zakażeń z szeregiem testowym dla IV fali"
generate_naive_forecasts_plot(window(confirmed4.train, start = weekly_freq_day_number(500)),
c4_naive_forecasts, plot_title1, "liczba zakażeń")
generate_naive_test_comparison_plot(confirmed4.test, c4_naive_forecasts, plot_title2, "liczba zakażeń")
rm(confirmed4.train, confirmed4.test, c4_naive_forecasts, plot_title1, plot_title2)
